<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e17b3023-5d01-44e7-aa6f-bc9cd2c0f4df}</ProjectGuid>
    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Framework 4.8</FrameworkVersion>
    <OutputPath>wiki\</OutputPath>
    <HtmlHelpName>Plexdata.Utilities.Exceptions</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\src\Plexdata.Utilities.Exceptions\bin\Release\netstandard2.0\Plexdata.Utilities.Exceptions.dll" />
      <DocumentationSource sourceFile="..\src\Plexdata.Utilities.Exceptions\bin\Plexdata.Utilities.Exceptions.xml" />
    </DocumentationSources>
    <HelpFileFormat>Markdown</HelpFileFormat>
    <SyntaxFilters>C#</SyntaxFilters>
    <PresentationStyle>Markdown</PresentationStyle>
    <CleanIntermediates>True</CleanIntermediates>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <IndentHtml>False</IndentHtml>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <HelpTitle>Plexdata Utilities Exceptions</HelpTitle>
    <HelpFileVersion>1.0.1</HelpFileVersion>
    <NamingMethod>Guid</NamingMethod>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <RootNamespaceContainer>True</RootNamespaceContainer>
    <RootNamespaceTitle>Plexdata Utilities Exceptions</RootNamespaceTitle>
    <NamespaceGrouping>False</NamespaceGrouping>
    <Preliminary>False</Preliminary>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <VisibleItems>Attributes, ExplicitInterfaceImplementations, InheritedMembers, InheritedFrameworkMembers, InheritedFrameworkInternalMembers, InheritedFrameworkPrivateMembers, Internals, Privates, PrivateFields, Protected, SealedProtected, NoPIATypes, PublicCompilerGenerated, EditorBrowsableNever, NonBrowsable</VisibleItems>
    <ApiFilter>
    </ApiFilter>
    <MissingTags>Summary, Parameter, Returns, Value, Remarks, AutoDocumentCtors, Namespace, TypeParameter, IncludeTargets, AutoDocumentDispose</MissingTags>
    <ComponentConfigurations>
      <ComponentConfig id="Code Block Component" enabled="True">
        <component id="Code Block Component">
          <basePath value="{@HtmlEncProjectFolder}" />
          <outputPaths>{@HelpFormatOutputPaths}</outputPaths>
          <allowMissingSource value="false" />
          <removeRegionMarkers value="false" />
          <colorizer syntaxFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xml" styleFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xsl" stylesheet="{@SHFBFolder}PresentationStyles\Colorizer\highlight.css" scriptFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.js" disabled="{@DisableCodeBlockComponent}" language="cs" tabSize="0" numberLines="false" outlining="false" keepSeeTags="false" defaultTitle="true" />
        </component>
      </ComponentConfig>
      <ComponentConfig id="API Token Resolution" enabled="True">
        <component id="API Token Resolution">{@TokenFiles}
                    <replace elements="/*//token" item="string(.)" /></component>
      </ComponentConfig>
    </ComponentConfigurations>
    <PlugInConfigurations>
      <PlugInConfig id="Documented Entities Only" enabled="True">
        <configuration />
      </PlugInConfig>
      <PlugInConfig id="Assembly Binding Redirection" enabled="True">
        <configuration useGAC="false">
          <assemblyBinding />
          <ignoreIfUnresolved>
            <assemblyIdentity name="BusinessObjects.Licensing.KeycodeDecoder" />
            <assemblyIdentity name="Microsoft.VisualStudio.TestTools.UITest.Playback" />
            <assemblyIdentity name="Newtonsoft.Json" />
          </ignoreIfUnresolved>
        </configuration>
      </PlugInConfig>
    </PlugInConfigurations>
    <TransformComponentArguments>
      <Argument Key="logoFile" Value="" />
      <Argument Key="logoHeight" Value="" />
      <Argument Key="logoWidth" Value="" />
      <Argument Key="logoAltText" Value="" />
      <Argument Key="logoPlacement" Value="left" />
      <Argument Key="logoAlignment" Value="left" />
      <Argument Key="maxVersionParts" Value="" />
      <Argument Key="defaultLanguage" Value="cs" />
      <Argument Key="includeEnumValues" Value="true" />
      <Argument Key="baseSourceCodeUrl" Value="" />
      <Argument Key="requestExampleUrl" Value="" />
    </TransformComponentArguments>
    <CopyrightText>Copyright &amp;#169%3b 2024 - plexdata.de</CopyrightText>
    <CopyrightHref>http://www.plexdata.de/</CopyrightHref>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="(global)" isDocumented="False" />
      <NamespaceSummaryItem name="Plexdata.Utilities.Exceptions" isDocumented="True" />
    </NamespaceSummaries>
    <ProjectSummary>&amp;lt%3bp&amp;gt%3bThe &amp;lt%3bem&amp;gt%3bPlexdata Utilities Exceptions&amp;lt%3b/em&amp;gt%3b provides a number of extension methods that allow standard checks such as null check, empty check, range check an so on, do be done in one single line of code.&amp;lt%3b/p&amp;gt%3b
&amp;lt%3bp&amp;gt%3bEach extension method comes with a set of overloads that allow users to control the type of thrown exception as well as the exception message.&amp;lt%3b/p&amp;gt%3b
&amp;lt%3bp&amp;gt%3bHere an overview of the existing extension methods that are provided by this package %28including their default exceptions, thrown as needed%29:&amp;lt%3b/p&amp;gt%3b
&amp;lt%3bul&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfNull%28%29&amp;lt%3b/span&amp;gt%3b is used for any kind of object and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentNullException&amp;lt%3b/span&amp;gt%3b if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfNotVerified%28delegate%29&amp;lt%3b/span&amp;gt%3b is used for any kind of object with verification and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentVerifyException&amp;lt%3b/span&amp;gt%3b %28defined in this package%29 if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfNullOrEmpty%28%29&amp;lt%3b/span&amp;gt%3b is used especially for strings and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentOutOfRangeException&amp;lt%3b/span&amp;gt%3b if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfNullOrWhiteSpace%28%29&amp;lt%3b/span&amp;gt%3b is used especially for strings and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentOutOfRangeException&amp;lt%3b/span&amp;gt%3b if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfLessThan%28minimum%29&amp;lt%3b/span&amp;gt%3b is used for number types such as &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bInt32&amp;lt%3b/span&amp;gt%3b, &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bDouble&amp;lt%3b/span&amp;gt%3b, etc. and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentOutOfRangeException&amp;lt%3b/span&amp;gt%3b if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfGreaterThan%28maximum%29&amp;lt%3b/span&amp;gt%3b is used for number types such as &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bInt32&amp;lt%3b/span&amp;gt%3b, &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bDouble&amp;lt%3b/span&amp;gt%3b, etc. and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentOutOfRangeException&amp;lt%3b/span&amp;gt%3b if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3bli&amp;gt%3bMethod &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bThrowIfOutOfRange%28minimum, maximum%29&amp;lt%3b/span&amp;gt%3b is used for number types such as &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bInt32&amp;lt%3b/span&amp;gt%3b, &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bDouble&amp;lt%3b/span&amp;gt%3b, etc. and throws an &amp;lt%3bspan style=&amp;quot%3bfont-family:monospace&amp;quot%3b&amp;gt%3bArgumentOutOfRangeException&amp;lt%3b/span&amp;gt%3b if necessary.&amp;lt%3b/li&amp;gt%3b
&amp;lt%3b/ul&amp;gt%3b
&amp;lt%3bp&amp;gt%3b&amp;lt%3bstrong&amp;gt%3bFramework&amp;lt%3b/strong&amp;gt%3b&amp;lt%3b/p&amp;gt%3b
&amp;lt%3bp&amp;gt%3bCurrent target framework of this library is the &amp;lt%3bem&amp;gt%3b.NET Standard v2.0&amp;lt%3b/em&amp;gt%3b.&amp;lt%3b/p&amp;gt%3b
&amp;lt%3bp&amp;gt%3b&amp;lt%3bstrong&amp;gt%3bLicense&amp;lt%3b/strong&amp;gt%3b&amp;lt%3b/p&amp;gt%3b
&amp;lt%3bp&amp;gt%3bThe software has been published under the terms of &amp;lt%3ba target=&amp;quot%3b_blank&amp;quot%3b href=&amp;quot%3bhttp://www.plexdata.de/licenses/mit.html&amp;quot%3b&amp;gt%3bMIT License&amp;lt%3b/a&amp;gt%3b.&amp;lt%3b/p&amp;gt%3b</ProjectSummary>
    <FooterText>
    </FooterText>
    <WarnOnMissingSourceContext>False</WarnOnMissingSourceContext>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <MaximumGroupParts>2</MaximumGroupParts>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>